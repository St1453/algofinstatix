[alembic]
# Path to migration scripts
script_location = alembic

# Template used to generate migration file names
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
prepend_sys_path = .

# Timezone to use when rendering the date within the migration file
# timezone =

# Max length of characters to apply to the "slug" field
truncate_slug_length = 40

# Set to 'true' to run the environment during the 'revision' command
revision_environment = false

# Set to 'true' to allow .pyc and .pyo files without a source .py file
sourceless = false

# Version location specification
version_locations = %(here)s/versions

# Version path separator
version_path_separator = os

# Set to 'true' to search source files recursively in each "version_locations" directory
recursive_version_locations = false

# Output encoding used when revision files are written from script.py.mako
output_encoding = utf-8

# Use environment variables for database configuration
# The actual URL will be constructed in env.py
sqlalchemy.url = ${DATABASE_URL}

[post_write_hooks]
# Format using "black"
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 79 REVISION_SCRIPT_FILENAME

# Lint with ruff
ruff.type = exec
ruff.executable = %(here)s/../.venv/Scripts/ruff
ruff.options = --fix REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S