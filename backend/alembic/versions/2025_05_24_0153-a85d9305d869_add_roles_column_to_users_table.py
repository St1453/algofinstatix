"""Add roles column to users table

Revision ID: a85d9305d869
Revises: 
Create Date: 2025-05-24 01:53:06.222447

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a85d9305d869'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First add the column as nullable
    op.add_column('users', sa.Column('roles', sa.String(length=10), nullable=True))
    # Set default value for existing rows
    op.execute("UPDATE users SET roles = 'user'")
    # Then alter the column to be NOT NULL
    op.alter_column('users', 'roles', nullable=False)
    
    # Set updated_at to current timestamp for any NULL values
    op.execute('UPDATE users SET updated_at = NOW() WHERE updated_at IS NULL')
    
    # Now alter the updated_at column to be NOT NULL
    op.alter_column(
        'users',
        'updated_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    
    op.alter_column(
        'users',
        'username',
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        'users',
        'first_name',
        existing_type=sa.VARCHAR(length=50),
        nullable=True,
    )
    op.alter_column(
        'users',
        'last_name',
        existing_type=sa.VARCHAR(length=50),
        nullable=True,
    )
    op.alter_column(
        'users',
        'profile_picture',
        existing_type=sa.VARCHAR(length=255),
        type_=sa.String(length=500),
        existing_nullable=True,
    )
    op.alter_column(
        'users',
        'created_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text('now()'),
    )
    op.alter_column(
        'users',
        'updated_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column(
        'users',
        'is_active',
        existing_type=sa.BOOLEAN(),
        nullable=False,
    )
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_constraint(
        op.f('users_temp_id_key'),
        'users',
        type_='unique',
    )
    op.create_unique_constraint(
        op.f('uq_users_username'),
        'users',
        ['username'],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        op.f('uq_users_username'),
        'users',
        type_='unique',
    )
    op.create_unique_constraint(
        op.f('users_temp_id_key'),
        'users',
        ['id'],
        postgresql_nulls_not_distinct=False,
    )
    op.create_index(
        op.f('ix_users_username'),
        'users',
        ['username'],
        unique=True,
    )
    op.alter_column(
        'users',
        'is_active',
        existing_type=sa.BOOLEAN(),
        nullable=True,
    )
    op.alter_column(
        'users',
        'updated_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        'users',
        'created_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text('now()'),
    )
    op.alter_column(
        'users',
        'profile_picture',
        existing_type=sa.String(length=500),
        type_=sa.VARCHAR(length=255),
        existing_nullable=True,
    )
    op.alter_column(
        'users',
        'last_name',
        existing_type=sa.VARCHAR(length=50),
        nullable=False,
    )
    op.alter_column(
        'users',
        'first_name',
        existing_type=sa.VARCHAR(length=50),
        nullable=False,
    )
    op.alter_column(
        'users',
        'username',
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.drop_column('users', 'roles')
    # ### end Alembic commands ###
